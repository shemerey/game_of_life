#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'game_of_life'
require 'curses'

game = GameOfLife.new(20, 10)

GameOfLife::Cell.find(1, 1, game.board).live!
GameOfLife::Cell.find(2, 1, game.board).live!
GameOfLife::Cell.find(2, 2, game.board).live!
GameOfLife::Cell.find(1, 2, game.board).live!

class CliInterface
  def initialize(game)
    @game = game
  end

  def left
    (Curses.cols - board.width) / 2
  end

  def top
    (Curses.lines - board.height) / 2
  end

  def window
    @window ||= begin
                  Curses.init_screen()
                  win = Curses::Window.new(board.height, board.width, top, left)
                  win.box(?#, ?#)
                  win.refresh
                  win
                end
  end

  def draw
    lines.each do |index, line|
      line.each do |cell|
        draw_cell(cell)
        window.refresh
      end
    end
    sleep 0.005
  end

  def cell_char(cell)
    cell.live? ? 'X' : ' '
  end

  def draw_cell(cell)
    window.addch(cell_char(cell))
  end

  def board
    @game.board
  end

  def lines
    @lines ||= begin
                 lines = {}
                 board.cells.each do |cell|
                   lines[cell.y] ||= []
                   lines[cell.y][cell.x] = cell
                 end
                 lines
               end
  end

end

interface = CliInterface.new(game)

while not game.over?
  interface.draw
end

